# -*- coding: utf-8 -*-
"""Loan Eligibility Prediction Mode

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1btFG-GyRZOowyWE6VaXzFY5qBvkOP-Im
"""

from google.colab import files
upload=files.upload()

import os
os.listdir()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.read_csv("test.csv")

"""Discovering Data"""

df.head(10)

df.isnull().sum()

df.duplicated().sum()

df.columns

df.dtypes

"""clean data  

"""

for columns in df.columns:
  if df[columns].dtypes =="object":
    df[columns].fillna(df[columns].mode()[0] , inplace=True)
  else:
    df[columns].fillna(df[columns].mean() , inplace=True)

df.isnull().sum()

df.duplicated()

"""EDA

"""

df.describe()

df.describe(include="object")

"""Data visulization





"""

gender_count=df["Gender"].value_counts()
plt.figure(figsize=(10,5))
plt.pie(gender_count,labels=gender_count.index, autopct="%1.1f%%")
plt.title("Gender Distribution")
plt.show()

married_count=df["Married"].value_counts()
plt.pie(married_count,labels=married_count.index, autopct="%1.1f%%")
plt.title("Married Distribution")
plt.show()

graduation_count=df["Education"].value_counts()
sns.barplot(graduation_count)
plt.title("education count")
plt.show()

#avareg_income_by_education
avg_income_by_education=df.groupby("Education")["ApplicantIncome"].mean()
plt.figure(figsize=(10,4))
sns.barplot(avg_income_by_education)
plt.title("Average Income by Education")
plt.show()

#dose the educated person have more income

education_by_income=df.groupby("Education")["ApplicantIncome"].mean()
sns.barplot(education_by_income)
plt.title("Education by Income")
plt.show()

#distribuation of loan amount
loan_amount_distribution=df["LoanAmount"]
sns.histplot(loan_amount_distribution)
plt.title("Loan Amount Distribution")
plt.show()

#loan amount by gender
loan_amount_by_gender=df.groupby("Gender")["LoanAmount"].mean()
sns.barplot(loan_amount_by_gender)
plt.title("Loan Amount by Gender")
plt.show()

# relation between ApplicantIncome by CoapplicantIncome
appli_by_copp=df.groupby("ApplicantIncome")["CoapplicantIncome"].mean()
sns.scatterplot(appli_by_copp)
plt.title("ApplicantIncome by CoapplicantIncome")
plt.show()

#Applicant's income versus educational status
income_by_education=df.groupby("Education")["ApplicantIncome"].mean()
sns.barplot(income_by_education)
plt.title("Applicant's Income by Educational Status")
plt.show()















