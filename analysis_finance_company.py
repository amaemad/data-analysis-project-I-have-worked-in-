# -*- coding: utf-8 -*-
"""Analysis finance company

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xOO6UN6xuOwSfiJjvX09QLH2E3dAnVHa
"""

import pandas as pd
import os
import numpy as np

df=pd.read_csv('/content/Financials.csv')

os.listdir()

df.head(30)

df.columns

df.columns = df.columns.str.strip()
df.columns

df.dtypes

columns_to_clean = ['Units Sold', 'Manufacturing Price', 'Sale Price', 'Gross Sales', 'Discounts', 'Sales', 'COGS', 'Profit']

def convert_parentheses(val):
    if isinstance(val, str):
        if val.startswith('(') and val.endswith(')'):
            return -float(val[1:-1].replace(',', ''))
        else:
            return float(val)
    else:
        return val

for col in columns_to_clean:
    if df[col].dtype == 'object':
        df[col] = df[col].str.replace('$', '').str.replace('-', '').str.replace(',', '').str.strip()
        df[col] = df[col].replace('', np.nan).apply(convert_parentheses).astype(float)

# Convert 'Date' column to datetime format
df['Date'] = pd.to_datetime(df['Date'])

# Display the cleaned data
df.head()

df_after_clean_fin=df.copy()

df.describe()

df['total_sales']=df["Sales"].sum()
total_sales

net_profit=df["Profit"].sum()
net_profit

df['gross_profit']=df["COGS"]-df['Profit']
df['gross_profit']

df['gross_proft_margin']=(df['gross_profit']/df["Sales"]*100)
df['gross_proft_margin']

df

monthly_sales = df.groupby(["Year", "Month Number"])["Profit"].sum()
best_month = monthly_sales.idxmax()
max_sales = monthly_sales.max()
print(best_month)
max_sales

import matplotlib.pyplot as plt

grouped_df = df.groupby('Date').agg({'Sales': 'sum', 'Profit': 'sum'})


plt.figure(figsize=(14, 7))
plt.plot( grouped_df['Sales'], label='Sales')
plt.plot( grouped_df['Profit'], label='Profit')
plt.title('Sales and Profit over Time')
plt.xlabel('Date')
plt.ylabel('Amount')
plt.legend()
plt.grid()
plt.show()

grouped_segment = df.groupby('Segment').agg({'Sales': 'sum', 'Profit': 'sum'})

grouped_segment.plot(kind='bar',figsize=(10, 6),color=['green','blue'])
plt.title('Sales and Profit by Segment')
plt.xlabel('Segment')
plt.ylabel('Amount')
plt.show()

plt.figure(figsize=(10,6))
plt.scatter(df['Discounts'],df['Profit'])

plt.title("discount vs profit")
plt.xlabel("discount")
plt.ylabel("profit")
plt.grid()
plt.show()

group_product=df.groupby('Product').agg({'Sales':'sum','Profit':'sum'})
fig, ax=plt.subplots(2,1, figsize=(12,12))

ax[0].bar(group_product.index, group_product['Sales'],color='blue')
ax[0].set_title('sales by product')
ax[0].set_xlabel('product')
ax[0].set_ylabel('sales')

ax[1].bar(group_product.index,group_product['Profit'],color='black')
ax[1].set_title('profit by product')
ax[1].set_xlabel('product')
ax[1].set_ylabel('profit')

plt.tight_layout()
plt.show()

group_country=df.groupby("Country").agg({'Sales':'sum','Profit':'sum'})

fig, ax=plt.subplots(2,1, figsize=(12,12))

ax[0].bar(group_country.index, group_country['Sales'],color='black')
ax[0].set_title('sales by country')
ax[0].set_xlabel('country')
ax[0].set_ylabel('sales')

ax[1].bar(group_country.index, group_country['Profit'],color='blue')
ax[1].set_title('profit by country')
ax[1].set_xlabel('country')
ax[1].set_ylabel('profit')

plt.tight_layout()
plt.show()

df['Discounts'].describe()

import seaborn as sns

correlation=df[["Sale Price", "Sales"]].corr()

plt.figure(figsize=(10,8))
sns.heatmap(correlation, annot=True ,cmap="coolwarm", center=0)
plt.title("correlation between sale price and sales")
plt.show()

plt.hist(df['Sales'],color='purple')
plt.title("distribution of sales")
plt.xlabel("sales")
plt.ylabel("frequence")
plt.show()

df["year_month"]= df["Date"].dt.to_period("M")
montly_sales=df.groupby(["year_month","Product"])["Units Sold"].sum().reset_index()
montly_sales["year_month"] = montly_sales["year_month"].dt.to_timestamp()

plt.figure(figsize=(12,5))


sns.lineplot(data=montly_sales, x="year_month", y="Units Sold", hue="Product", marker="o")
plt.title("montly sales")
plt.xlabel("year_month")
plt.ylabel("units sold")
plt.show()

df["year_month"]= df["Date"].dt.to_period("M")
montly_sales=df.groupby(["year_month","Segment"])["Units Sold"].sum().reset_index()
montly_sales["year_month"] = montly_sales["year_month"].dt.to_timestamp()

plt.figure(figsize=(12,7))
sns.lineplot(data=montly_sales, x="year_month", y="Units Sold", hue="Segment")
plt.title("monthy sales by segment")
plt.xlabel("year_month")
plt.ylabel("units sold")
plt.show()

# Create a new dataframe with total monthly profit for each discount band
df["year_month"]=df['Date'].dt.to_period("M")
month_profit=df.groupby(["year_month","Profit"])["Discount Band"].sum().reset_index()
month_profit["year_month"]=month_profit["year_month"].dt.to_timestamp()

plt.figure(figsize=(12,5))
sns.lineplot(data=month_profit, x="year_month", y="Profit", hue="Discount Band")
plt.title("monthly profit by discount band")
plt.xlabel("year_month")
plt.ylabel("profit")
plt.show()

# Create a pivot table of 'Units Sold' with 'Product' and 'Discount Band' as dimensions
units_product_discount = df.pivot_table(values="Units Sold", index="Product", columns="Discount Band", aggfunc="sum")

plt.figure(figsize=(10,6))
sns.heatmap(units_product_discount, cmap='viridis',annot=True, fmt="g")
plt.title("Units Sold by Product and Discount Band")
plt.show()

# Create a pivot table of 'Profit' with 'Segment' and 'Discount Band' as dimensions
profit_srg_band = df.pivot_table(values="Profit", index="Segment", columns= "Discount Band", aggfunc="sum")

plt.figure(figsize=(12,4))
sns.heatmap(profit_srg_band, annot=True, fmt='.0f', cmap='viridis')
plt.title("profit by segment and discount band")
plt.show()

df_after_clean_fin.to_csv('df_after_clean_fin.csv', index=False)